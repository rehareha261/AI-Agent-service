# Configuration Ruff pour AI-Agent
# Documentation: https://docs.astral.sh/ruff/

# Cibler Python 3.12+
target-version = "py312"

# Longueur de ligne maximale
line-length = 120

# Indentation
indent-width = 4

[lint]
# Activer les règles de linting
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort (imports)
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    "EM",     # flake8-errmsg
    "ISC",    # flake8-implicit-str-concat
    "ICN",    # flake8-import-conventions
    "PIE",    # flake8-pie
    "PT",     # flake8-pytest-style
    "Q",      # flake8-quotes
    "RSE",    # flake8-raise
    "RET",    # flake8-return
    "SIM",    # flake8-simplify
    "PTH",    # flake8-use-pathlib
    "PL",     # pylint
    "RUF",    # ruff-specific rules
]

# Ignorer certaines règles
ignore = [
    "E501",     # line-too-long (géré par le formateur)
    "PLR0913",  # too-many-arguments
    "PLR0912",  # too-many-branches
    "PLR0915",  # too-many-statements
    "PLR2004",  # magic-value-comparison
    "B008",     # function-call-in-default-argument (utilisé par FastAPI)
    "RUF001",   # ambiguous-unicode-character-string
    "RUF002",   # ambiguous-unicode-character-docstring
    "RUF003",   # ambiguous-unicode-character-comment
    "EM101",    # raw-string-in-exception (messages d'erreur utilisateur)
    "EM102",    # f-string-in-exception
]

# Règles à corriger automatiquement
fixable = ["ALL"]
unfixable = []

# Exclure certains patterns
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
]

# Autoriser les imports inutilisés dans __init__.py
[lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/*.py" = ["S101", "PLR2004"]  # Autoriser assert et magic values dans les tests

[lint.isort]
# Configuration de tri des imports
known-first-party = ["ai", "config", "graph", "models", "nodes", "services", "tools", "utils"]
force-sort-within-sections = true
lines-after-imports = 2

[lint.mccabe]
# Complexité cyclomatique maximale
max-complexity = 15

[lint.pydocstyle]
# Style de docstrings (Google style)
convention = "google"

[lint.pylint]
# Configuration pylint
max-args = 8
max-branches = 15
max-returns = 6
max-statements = 60

[format]
# Configuration du formatage
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Prévisualiser les nouvelles fonctionnalités
preview = false

